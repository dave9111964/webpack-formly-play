{
  "name": "angular-formly-templates-bootstrap",
  "version": "4.3.1",
  "author": {
    "name": "Astrism",
    "email": "astrisms@gmail.com"
  },
  "contributors": [
    {
      "name": "Astrism",
      "email": "astrisms@gmail.com"
    },
    {
      "name": "Kent C. Dodds",
      "email": "kent@doddsfamily.us"
    }
  ],
  "homepage": "http://formly-js.github.io/angular-formly-templates-bootstrap/",
  "repository": {
    "type": "git",
    "url": "git://github.com/formly-js/angular-formly-templates-bootstrap.git"
  },
  "main": "dist/angular-formly-templates-bootstrap.js",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.githubusercontent.com/formly-js/angular-formly-templates-bootstrap/master/LICENSE"
    }
  ],
  "scripts": {
    "build:dist": "webpack",
    "build:minify": "webpack --config webpack.config.minify.js",
    "build": "npm run build:dist; npm run build:minify",
    "test": "karma start karma.conf.js",
    "test:single": "karma start karma.conf.js --single-run",
    "test:ci": "karma start karma.conf.ci.js",
    "watch": "webpack --watch",
    "start": "npm run watch & npm run test",
    "release": "git push && npm publish && git push --tags"
  },
  "description": "Angular-Formly plugin which outputs bootstrap compatible form fields.",
  "peerDependencies": {
    "angular": "^1.2.x || >= 1.4.0-beta.0 || >= 1.5.0-beta.0",
    "angular-formly": ">=4.0.5",
    "api-check": ">=6.0.10",
    "bootstrap": "^3.2.0"
  },
  "devDependencies": {
    "babel-core": "^5.4.3",
    "babel-loader": "^5.1.2",
    "deep-extend": "^0.3.2",
    "jshint": "^2.7.0",
    "jshint-loader": "^0.8.3",
    "lodash-node": "^3.8.0",
    "ng-annotate": "^0.15.4",
    "ng-annotate-loader": "0.0.2",
    "node-libs-browser": "^0.5.0",
    "raw-loader": "^0.5.1",
    "webpack": "^1.9.6"
  },
  "readme": "[![Build Status](https://travis-ci.org/formly-js/angular-formly.svg)](https://travis-ci.org/formly-js/angular-formly)\n[![Coverage Status](https://img.shields.io/coveralls/formly-js/angular-formly.svg)](https://coveralls.io/r/formly-js/angular-formly)\n\n## angular-formly: Bootstrap Template\n\nThis is a template for angular-formly which adds templates with classes specific to bootstrap. Each field is wrapped in a div. This library is not standalone and requires angular-formly to be present and loaded.\n\n### Demo http://angular-formly.com\n\n## Dependencies\n- Required to use these templates:\n - angular\n - angular-formly\n - api-check\n\n- Dev dependencies to build Formly\n - npm\n\n\n## Install in your project\n- Install [angular-formly](https://github.com/formly-js/angular-formly)\n\n- Install angular-formly: Bootstrap Templates\n `$ bower install angular-formly angular-formly-templates-bootstrap --save`\n\n or\n\n `$ npm install angular-formly angular-formly-templates-bootstrap --save`\n\n- Include the javascript file in your index.html, Formly comes in the following flavors:\n `<script src=\"bower_components/angular-formly/dist/formly.min.js\"></script>`\n `<script src=\"bower_components/angular-formly-templates-bootstrap/dist/angular-formly-templates-bootstrap.min.js\"></script>`\n\n and\n\n `angular.module('yourModule', ['formly', 'formlyBootstrap']);`\n\n or\n\n `angular.module('yourModule', [require('angular-formly'), require('angular-formly-templates-bootstrap')]);`\n\n## Documentation\n\nSee [angular-formly](http://docs.angular-formly.com) for formly core documentation.\n\n### Common Properties\n\nNOTE: All of these properties will be under the `templateOptions` property as of angular-formly 3.0.0\n\n---\n##### label (string)\n>`label` is used to add an html label to each field.\n\n###### Default\n>A default is set for each field based on its type. ie `Text`, `Checkbox`, `Password`\n\n---\n##### required (boolean)\n>`required` is used to add the required attribute to a form field.\n\n###### Default\n>`undefined`\n\n---\n##### disabled (boolean)\n>`disabled` is used to add the disabled attribute to a form field.\n\n###### Default\n>`undefined`\n\n---\n##### placeholder (string)\n>`placeholder` is used to add placeholder text to some inputs.\n\n###### Default\n>`undefined`\n\n---\n##### description (string)\n>`description` is used to add descriptive text to all inputs.\n\n###### Default\n>`undefined`\n\n---\n##### addonLeft (object)\n>`addonLeft` is used to add an add-on on the left of a field. The object accepts three properties: `text` that sets a simple text, `onClick` will add a `cursor:pointer` and an ng-click to the addon (invoked with the options and scope), and `class` that sets classes to the add-on.\n\n###### Default\n>`undefined`\n\n---\n##### addonRight (object)\n>`addonRight` is used to add an add-on on the right of a field. The object accepts three properties: `text` that sets a simple text, `onClick` will add a `cursor:pointer` and an ng-click to the addon (invoked with the options and scope), and `class` that sets classes to the add-on.\n\n###### Default\n>`undefined`\n\n### Fields\n\n### Form Fields\n\nBelow is a detailed description of each form fields and its custom properties.\n\n#### Input form field\n>The input uses the <input> element and allows you to specify it's type via the type property\n\n##### default (string, optional)\n\n_Example text field_\n```json\n{\n  \"type\": \"input\",\n  \"key\": \"firstName\",\n  \"templateOptions\": {\n    \"type\": \"email\", // or url, or text, etc.\n    \"placeholder\": \"jane doe\",\n    \"label\": \"First name\"\n  }\n}\n```\n\n---\n#### Textarea form field\n>The textarea field creates multiline input with a textarea element.\n\n##### default (string, optional)\n\n##### lines (number, optional)\n>`lines` sets the rows attribute for the textarea element.\n\n_Example textarea field_\n```json\n{\n  \"type\": \"textarea\",\n  \"key\": \"about\",\n  \"templateOptions\": {\n    \"placeholder\": \"I like puppies\",\n    \"label\": \"Tell me about yourself\",\n    \"rows\": 4,\n    \"cols\": 15\n  }\n}\n```\n\n---\n#### Checkbox form field\n>The checkbox field allows checkbox input with a input element set to `type='checkbox'`. It doesn't have any custom properties.\n\n##### default (boolean, optional)\n\n_Example checkbox field_\n```json\n{\n  \"type\": \"checkbox\",\n  \"key\": \"checkThis\",\n  \"templateOptions\": {\n    \"label\": \"Check this box\"\n  }\n}\n```\n\n---\n#### Radio form field\n>The radio field allows multiple choice input with a series of linked inputs, with `type='radio'`.\n\n##### options (array, required)\n>`options` is an array of options for the radio form field to display. Each option should be an object with a `name`(string) and `value`(string or number).\n\n_Example radio field_\n```json\n{\n  \"key\": \"triedEmber\",\n  \"type\": \"radio\",\n  \"templateOptions\": {\n    \"label\": \"Have you tried EmberJs yet?\",\n    \"options\": [\n      {\n        \"name\": \"Yes, and I love it!\",\n        \"value\": \"yesyes\"\n      },\n      {\n        \"name\": \"Yes, but I'm not a fan...\",\n        \"value\": \"yesno\"\n      },\n      {\n        \"name\": \"Nope\",\n        \"value\": \"no\"\n      }\n    ]\n  }\n}\n```\n\n---\n#### Select form field\n>The select field allows selection via dropdown using the select element.\n\n##### default (number, optional)\n>The default can be set to the index of one of the `options`.\n\n##### options (array, required)\n>`options` is an array of options for the select form field to display. Each option should be an object with a `name`(string). You may optionally add a `group` to some or all of your options.\n\n_Example select field_\n```json\n{\n  \"key\": \"transportation\",\n  \"type\": \"select\",\n  \"templateOptions\": {\n    \"label\": \"How do you get around in the city\",\n    \"valueProp\": \"name\",\n    \"options\": [\n      {\n        \"name\": \"Car\"\n      },\n      {\n        \"name\": \"Helicopter\"\n      },\n      {\n        \"name\": \"Sport Utility Vehicle\"\n      },\n      {\n        \"name\": \"Bicycle\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Skateboard\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Walk\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Bus\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Scooter\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Train\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Hot Air Baloon\",\n        \"group\": \"low emissions\"\n      }\n    ]\n  }\n}\n```\n\n## Contributing\n\nPlease see the [CONTRIBUTING Guidelines](CONTRIBUTING.md).\n\n## Thanks\n\nA special thanks to [Nimbly](http://gonimbly.com) for creating/sponsoring angular-formly's development.\nThanks to [Kent C. Dodds](https://github.com/kentcdodds) for his continued support on the project.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/formly-js/angular-formly-templates-bootstrap/issues"
  },
  "_id": "angular-formly-templates-bootstrap@4.3.1",
  "_from": "angular-formly-templates-bootstrap@^4.0.3"
}
